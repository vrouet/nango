accelo:
    categories:
        - invoicing
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.api.accelo.com/oauth2/v0/authorize
    token_url: https://${connectionConfig.subdomain}.api.accelo.com/oauth2/v0/token
    scope_separator: ','
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://${connectionConfig.subdomain}.api.accelo.com
    docs: https://docs.nango.dev/integrations/all/accelo
adobe:
    categories:
        - design
    auth_mode: OAUTH2
    authorization_url: https://ims-na1.adobelogin.com/ims/authorize/v2
    token_url: https://ims-na1.adobelogin.com/ims/token/v3
    default_scopes:
        - offline_access
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/adobe
affinity:
    categories:
        - crm
    auth_mode: BASIC
    proxy:
        base_url: https://api.affinity.co
    docs: https://docs.nango.dev/integrations/all/affinity
aircall:
    categories:
        - support
    auth_mode: OAUTH2
    authorization_url: https://dashboard.aircall.io/oauth/authorize
    token_url: https://api.aircall.io/v1/oauth/token
    authorization_params:
        response_type: code
        scope: public_api
    token_params:
        grant_type: authorization_code
    docs: https://docs.nango.dev/integrations/all/aircall
airtable:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://airtable.com/oauth2/v1/authorize
    token_url: https://airtable.com/oauth2/v1/token
    authorization_method: header
    auth:
        response_type: code
    proxy:
        base_url: https://api.airtable.com
    docs: https://docs.nango.dev/integrations/all/airtable
autodesk:
    categories:
        - design
    auth_mode: OAUTH2
    authorization_url: https://developer.api.autodesk.com/authentication/v2/authorize
    token_url: https://developer.api.autodesk.com/authentication/v2/token
    scope_separator: ' '
    disable_pkce: true
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://developer.api.autodesk.com
        retry:
            after: 'Retry-After'
    docs: https://docs.nango.dev/integrations/all/autodesk
algolia:
    categories:
        - search
    auth_mode: API_KEY
    proxy:
        base_url: https://${connectionConfig.APP_ID}.algolia.net
        headers:
            X-Algolia-Application-Id: ${connectionConfig.APP_ID}
            X-Algolia-API-Key: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/algolia
amazon:
    categories:
        - dev-tools
        - e-commerce
    auth_mode: OAUTH2
    authorization_url: https://www.amazon.com/ap/oa
    token_url: https://api.amazon.${connectionConfig.extension}/auth/o2/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.amazon.com
    docs: https://docs.nango.dev/integrations/all/amazon
anrok:
    categories:
        - legal
    auth_mode: API_KEY
    proxy:
        base_url: https://api.anrok.com
        headers:
            Authorization: Bearer ${apiKey}
        retry:
            after: 'Retry-After'
    docs: https://docs.nango.dev/integrations/all/anrok
amplitude:
    categories:
        - analytics
    auth_mode: BASIC
    proxy:
        base_url: https://amplitude.com
    docs: https://docs.nango.dev/integrations/all/amplitude
apollo:
    categories:
        - marketing
    auth_mode: API_KEY
    proxy:
        base_url: https://app.apollo.io/api
        query:
            api_key: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/apollo
apple-app-store:
    auth_mode: APP_STORE
    token_url: https://api.appstoreconnect.apple.com/v1/apps
    authorization_params:
        audience: appstoreconnect-v1
    docs: https://docs.nango.dev/integrations/all/apple-app-store
asana:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://app.asana.com/-/oauth_authorize
    token_url: https://app.asana.com/-/oauth_token
    token_params:
        grant_type: authorization_code
    auth:
        response_type: code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://app.asana.com
        retry:
            after: 'Retry-After'
        paginate:
            type: cursor
            cursor_path_in_response: next_page.offset
            cursor_name_in_request: offset
            response_path: data
            limit_name_in_request: limit
    docs: https://docs.nango.dev/integrations/all/asana
ashby:
    categories:
        - ats
    auth_mode: BASIC
    proxy:
        base_url: https://api.ashbyhq.com
        verification:
            method: POST
            endpoint: apiKey.info
    docs: https://docs.nango.dev/integrations/all/ashby
atlassian:
    categories:
        - dev-tools
    auth_mode: OAUTH2
    authorization_url: https://auth.atlassian.com/authorize
    token_url: https://auth.atlassian.com/oauth/token
    default_scopes:
        - offline_access
    authorization_params:
        response_type: code
        audience: api.atlassian.com
        prompt: consent
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.atlassian.com
    docs: https://docs.nango.dev/integrations/all/atlassian
attio:
    categories:
        - crm
    auth_mode: OAUTH2
    authorization_url: https://app.attio.com/authorize
    token_url: https://app.attio.com/oauth/token
    token_params:
        grant_type: authorization_code
    auth:
        response_type: code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://app.attio.com
    docs: https://docs.nango.dev/integrations/all/attio
auth0:
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.auth0.com/authorize
    token_url: https://${connectionConfig.subdomain}.auth0.com/oauth/token
    authorization_params:
        response_type: code
        response_mode: query
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/auth0
aws:
    categories:
        - dev-tools
        - e-commerce
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.auth.${connectionConfig.extension}.amazoncognito.com/oauth2/authorize
    token_url: https://${connectionConfig.subdomain}.auth.${connectionConfig.extension}.amazoncognito.com/oauth2/token
    token_params:
        grant_type: authorization_code
    auth:
        response_type: code
    refresh_params:
        grant_type: refresh_token
    default_scopes:
        - openid
    docs: https://docs.nango.dev/integrations/all/aws
bamboohr:
    categories:
        - hr
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.bamboohr.com/authorize.php
    token_url: https://${connectionConfig.subdomain}.bamboohr.com/token.php
    authorization_params:
        response_type: code
        request: authorize
    token_params:
        grant_type: authorization_code
        request: token
    proxy:
        base_url: https://api.bamboohr.com/api/gateway.php/${connectionConfig.subdomain}
    docs: https://docs.nango.dev/integrations/all/bamboohr
bamboohr-basic:
    categories:
        - hr
    auth_mode: BASIC
    proxy:
        base_url: https://api.bamboohr.com/api/gateway.php/${connectionConfig.subdomain}
        verification:
            method: GET
            endpoint: /v1/meta/fields
    docs: https://docs.nango.dev/integrations/all/bamboohr
battlenet:
    categories:
        - gaming
    auth_mode: OAUTH2
    authorization_url: https://oauth.battle.${connectionConfig.extension}/authorize
    token_url: https://oauth.battle.${connectionConfig.extension}/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    docs: https://docs.nango.dev/integrations/all/battlenet
bitbucket:
    categories:
        - dev-tools
    auth_mode: OAUTH2
    authorization_url: https://bitbucket.org/site/oauth2/authorize
    token_url: https://bitbucket.org/site/oauth2/access_token
    proxy:
        base_url: https://api.bitbucket.org
    docs: https://docs.nango.dev/integrations/all/bitbucket
bitdefender:
    categories:
        - other
    auth_mode: BASIC
    proxy:
        base_url: ${connectionConfig.ACCESS_URL}
        retry:
            after: 'Retry-After'
    docs: https://docs.nango.dev/integrations/all/bitdefender
blackbaud:
    categories:
        - crm
    auth_mode: OAUTH2
    authorization_url: https://app.blackbaud.com/oauth/authorize
    token_url: https://oauth2.sky.blackbaud.com/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.sky.blackbaud.com
    docs: https://docs.nango.dev/integrations/all/blackbaud
blandai:
    categories:
        - support
    auth_mode: API_KEY
    proxy:
        base_url: https://api.bland.ai
        headers:
            Authorization: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/blandai
boldsign:
    categories:
        - legal
    auth_mode: OAUTH2
    authorization_url: https://account.boldsign.com/connect/authorize
    token_url: https://account.boldsign.com/connect/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.boldsign.com
    docs: https://docs.nango.dev/integrations/all/boldsign
box:
    categories:
        - knowledge-base
        - storage
    auth_mode: OAUTH2
    authorization_url: https://account.box.com/api/oauth2/authorize
    token_url: https://api.box.com/oauth2/token
    proxy:
        base_url: https://api.box.com
    docs: https://docs.nango.dev/integrations/all/box
braintree:
    categories:
        - payment
    auth_mode: OAUTH2
    authorization_url: https://api.braintreegateway.com/oauth/connect
    token_url: https://api.braintreegateway.com/oauth/access_tokens
    scope_separator: ','
    authorization_method: header
    body_format: json
    token_params:
        grant_type: authorization_code
    redirect_uri_metadata:
        - merchantId
    docs: https://docs.nango.dev/integrations/all/braintree
braintree-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://api.sandbox.braintreegateway.com/oauth/connect
    token_url: https://api.sandbox.braintreegateway.com/oauth/access_tokens
    scope_separator: ','
    authorization_method: header
    body_format: json
    token_params:
        grant_type: authorization_code
    redirect_uri_metadata:
        - merchantId
    docs: https://docs.nango.dev/integrations/all/braintree
brex:
    categories:
        - banking
    auth_mode: OAUTH2
    authorization_url: https://accounts-api.brex.com/oauth2/default/v1/authorize
    token_url: https://accounts-api.brex.com/oauth2/default/v1/token
    default_scopes:
        - openid
        - offline_access
    proxy:
        base_url: https://platform.brexapis.com
    docs: https://docs.nango.dev/integrations/all/brex
brex-api-key:
    auth_mode: API_KEY
    proxy:
        headers:
            Authorization: Bearer ${apiKey}
        base_url: https://platform.brexapis.com
    docs: https://docs.nango.dev/integrations/all/brex
brex-staging:
    auth_mode: OAUTH2
    authorization_url: https://accounts-api.staging.brexapps.com/oauth2/default/v1/authorize
    token_url: https://accounts-api.staging.brexapps.com/oauth2/default/v1/token
    proxy:
        base_url: https://platform.staging.brexapis.com
    docs: https://docs.nango.dev/integrations/all/brex
calendly:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://auth.calendly.com/oauth/authorize
    token_url: https://auth.calendly.com/oauth/token
    authorization_params:
        response_type: code
    proxy:
        base_url: https://api.calendly.com
        paginate:
            type: link
            link_path_in_response_body: pagination.next_page
    token_response_metadata:
        - owner
    docs: https://docs.nango.dev/integrations/all/calendly
canny:
    categories:
        - support
    auth_mode: API_KEY
    proxy:
        base_url: https://canny.io/api/v1
        query:
            apiKey: ${apiKey}
        verification:
            method: POST
            endpoint: /boards/list
    docs: https://docs.nango.dev/integrations/all/canny
certn:
    categories:
        - legal
    auth_mode: API_KEY
    proxy:
        base_url: https://api.certn.co
        headers:
            Authorization: Bearer ${apiKey}
        paginate:
            type: link
            link_path_in_response_body: next
            response_path: results
        verification:
            method: GET
            endpoint: /api/v2/teams
    docs: https://docs.nango.dev/integrations/all/certn
certn-partner:
    categories:
        - legal
    auth_mode: OAUTH2_CC
    proxy:
        headers:
            Authorization: Bearer ${apiKey}
        base_url: https://api.certn.co
        paginate:
            type: offset
            offset_name_in_request: page
            response_path: data
            limit_name_in_request: limit
        verification:
            method: GET
            endpoint: /api/v2/teams
    docs: https://docs.nango.dev/integrations/all/certn
checkr-partner:
    categories:
        - legal
    auth_mode: OAUTH2
    authorization_url: https://partners.checkr.com/authorize/${connectionConfig.client_id}
    token_url: https://api.checkr.com/oauth/tokens
    disable_pkce: true
    token_params:
        grant_type: authorization_code
    proxy:
        retry:
            at: 'X-Ratelimit-Reset'
        base_url: https://api.checkr.com
    token_response_metadata:
        - checkr_account_id
    webhook_routing_script: checkrWebhookRouting
    post_connection_script: checkrPostConnection
    docs: https://docs.nango.dev/integrations/all/checkr
checkr-partner-staging:
    categories:
        - legal
    auth_mode: OAUTH2
    authorization_url: https://partners.checkrhq-staging.net/authorize/${connectionConfig.client_id}
    token_url: https://api.checkr-staging.com/oauth/tokens
    disable_pkce: true
    token_params:
        grant_type: authorization_code
    proxy:
        retry:
            at: 'X-Ratelimit-Reset'
        base_url: https://api.checkr-staging.com
    token_response_metadata:
        - checkr_account_id
    webhook_routing_script: checkrWebhookRouting
    post_connection_script: checkrPostConnection
    docs: https://docs.nango.dev/integrations/all/checkr
chorus:
    auth_mode: BASIC
    proxy:
        base_url: https://chorus.ai
    docs: https://docs.nango.dev/integrations/all/chorus
clari-copilot:
    auth_mode: API_KEY
    proxy:
        headers:
            X-Api-Key: ${apiKey}
            X-Api-Password: ${connectionConfig.API_PASSWORD}
        base_url: https://rest-api.copilot.clari.com
    docs: https://docs.nango.dev/integrations/all/clari-copilot
clickup:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://app.clickup.com/api
    token_url: https://api.clickup.com/api/v2/oauth/token
    proxy:
        base_url: https://api.clickup.com
    docs: https://docs.nango.dev/integrations/all/clickup
cloudentity:
    auth_mode: OAUTH2_CC
    categories:
        - other
    token_url: https://${connectionConfig.tenantID}.${connectionConfig.regionID}.authz.cloudentity.io/${connectionConfig.tenantID}/${connectionConfig.workspaceID}/oauth2/token
    scope_separator: ' '
    token_params:
        grant_type: client_credentials
    proxy:
        base_url: https://${connectionConfig.tenantID}.${connectionConfig.regionID}.authz.cloudentity.io/${connectionConfig.tenantID}/${connectionConfig.workspaceID}
    docs: https://docs.nango.dev/integrations/all/cloudentity
close:
    categories:
        - crm
    auth_mode: OAUTH2
    authorization_url: https://app.close.com/oauth2/authorize
    token_url: https://api.close.com/oauth2/token/
    authorization_params:
        response_type: code
    default_scopes:
        - offline_access
    proxy:
        base_url: https://api.close.com/api
    docs: https://docs.nango.dev/integrations/all/close
coda:
    categories:
        - knowledge-base
        - productivity
    auth_mode: API_KEY
    proxy:
        base_url: https://coda.io/apis/v1
        headers:
            Authorization: Bearer ${apiKey}
    docs: https://docs.nango.dev/integrations/all/coda
confluence:
    categories:
        - knowledge-base
    alias: jira
    docs: https://docs.nango.dev/integrations/all/confluence
contentful:
    categories:
        - dev-tools
        - design
        - cms
    auth_mode: OAUTH2
    authorization_url: https://be.contentful.com/oauth/authorize
    token_url: https://be.contentful.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://${connectionConfig.subdomain}.contentful.com
        retry:
            after: X-Contentful-RateLimit-Reset
    docs: https://docs.nango.dev/integrations/all/contentful
contentstack:
    categories:
        - cms
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.contentstack.com/apps/${connectionConfig.appId}/authorize
    token_url: https://${connectionConfig.subdomain}.contentstack.com/apps-api/apps/token
    docs: https://docs.nango.dev/integrations/all/contentstack
coros:
    categories:
        - sports
    auth_mode: OAUTH2
    authorization_url: https://open.coros.com/oauth2/authorize
    token_url: https://open.coros.com/oauth2/accesstoken
    refresh_url: https://open.coros.com/oauth2/refresh-token
    authorization_params:
        response_type: code
    token_response_metadata:
        - openId
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://open.coros.com
    docs: https://docs.nango.dev/integrations/all/coros
coros-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://opentest.coros.com/oauth2/authorize
    token_url: https://opentest.coros.com/oauth2/accesstoken
    refresh_url: https://opentest.coros.com/oauth2/refresh-token
    authorization_params:
        response_type: code
    token_response_metadata:
        - openId
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://opentest.coros.com
    docs: https://docs.nango.dev/integrations/all/coros
#Untested configuration. Please reach out if you have a test account that we can use to test it.
datev:
    categories:
        - legal
        - payroll
        - hr
    auth_mode: OAUTH2
    authorization_url: https://login.datev.de/openid/authorize
    token_url: https://api.datev.de/token
    token_request_auth_method: basic
    scope_separator: ' '
    default_scopes:
        - openid
    authorization_params:
        response_type: code id_token
        response_mode: query
        nonce: AnotherRandomStringDatev
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.datev.de
    docs: https://docs.nango.dev/integrations/all/datev
deel:
    categories:
        - hr
    auth_mode: OAUTH2
    authorization_url: https://auth.letsdeel.com/oauth2/authorize
    token_url: https://auth.letsdeel.com/oauth2/tokens
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.letsdeel.com
    docs: https://docs.nango.dev/integrations/all/deel
deel-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://auth-demo.letsdeel.com/oauth2/authorize
    token_url: https://auth-demo.letsdeel.com/oauth2/tokens
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api-staging.letsdeel.com
    docs: https://docs.nango.dev/integrations/all/deel
dialpad:
    categories:
        - communication
    auth_mode: OAUTH2
    authorization_url: https://dialpad.com/oauth2/authorize
    token_url: https://dialpad.com/oauth2/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://dialpad.com
    docs: https://docs.nango.dev/integrations/all/dialpad
digitalocean:
    categories:
        - dev-tools
    auth_mode: OAUTH2
    authorization_url: https://cloud.digitalocean.com/v1/oauth/authorize
    token_url: https://cloud.digitalocean.com/v1/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.digitalocean.com
    docs: https://docs.nango.dev/integrations/all/digitalocean
discord:
    categories:
        - gaming
        - social
    auth_mode: OAUTH2
    authorization_url: https://discord.com/api/oauth2/authorize
    token_url: https://discord.com/api/oauth2/token
    authorization_params:
        response_type: code
    proxy:
        base_url: https://discord.com
        retry:
            after: 'Retry-After'
    docs: https://docs.nango.dev/integrations/all/discord
docusign:
    categories:
        - legal
    auth_mode: OAUTH2
    authorization_url: https://account.docusign.com/oauth/auth
    token_url: https://account.docusign.com/oauth/token
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://www.docusign.net
    docs: https://docs.nango.dev/integrations/all/docusign
docusign-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://account-d.docusign.com/oauth/auth
    token_url: https://account-d.docusign.com/oauth/token
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://demo.docusign.net
    docs: https://docs.nango.dev/integrations/all/docusign
dropbox:
    categories:
        - knowledge-base
        - storage
    auth_mode: OAUTH2
    authorization_url: https://www.dropbox.com/oauth2/authorize
    token_url: https://api.dropboxapi.com/oauth2/token
    authorization_params:
        token_access_type: offline
    proxy:
        base_url: https://api.dropboxapi.com
    docs: https://docs.nango.dev/integrations/all/dropbox
egnyte:
    categories:
        - storage
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.egnyte.com/puboauth/token
    token_url: https://${connectionConfig.subdomain}.egnyte.com/puboauth/token
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://${connectionConfig.subdomain}.egnyte.com/pubapi
    docs: https://docs.nango.dev/integrations/all/egnyte
entrata:
    categories:
        - other
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.subdomain}.entrata.com
    docs: https://docs.nango.dev/integrations/all/entrata
envoy:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://app.envoy.com/a/auth/v0/authorize
    token_url: https://app.envoy.com/a/auth/v0/token
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.envoy.com
    docs: https://docs.nango.dev/integrations/all/envoy
epic-games:
    categories:
        - gaming
    auth_mode: OAUTH2
    authorization_url: https://www.epicgames.com/id/authorize
    token_url: https://api.epicgames.dev/epic/oauth/v1/token
    authorization_method: header
    proxy:
        base_url: https://api.epicgames.dev
    docs: https://docs.nango.dev/integrations/all/epic-games
evaluagent:
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.region}.evaluagent.com
    docs: https://docs.nango.dev/integrations/all/evaluagent
eventbrite:
    categories:
        - marketing
    auth_mode: OAUTH2
    authorization_url: https://www.eventbrite.com/oauth/authorize
    token_url: https://www.eventbrite.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    proxy:
        base_url: https://www.eventbriteapi.com
    docs: https://docs.nango.dev/integrations/all/eventbrite
exa:
    categories:
        - analytics
    auth_mode: API_KEY
    proxy:
        base_url: https://api.exa.ai
        headers:
            x-api-key: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/exa
exact-online:
    categories:
        - accounting
        - hr
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://start.exactonline.${connectionConfig.extension}/api/oauth2/auth
    token_url: https://start.exactonline.${connectionConfig.extension}/api/oauth2/token
    authorization_method: header
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    token_expiration_buffer: 30
    proxy:
        base_url: https://start.exactonline.${connectionConfig.extension}/
        paginate:
            type: link
            link_path_in_response_body: d.__next
    docs: https://docs.nango.dev/integrations/all/exact-online
exist:
    categories:
        - other
    auth_mode: OAUTH2
    authorization_url: https://exist.io/oauth2/authorize
    token_url: https://exist.io/oauth2/access_token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://exist.io/
        paginate:
            type: link
            link_path_in_response_body: next
    docs: https://docs.nango.dev/integrations/all/exist
expensify:
    categories:
        - productivity
    auth_mode: BASIC
    docs: https://docs.nango.dev/integrations/all/expensify
factorial:
    categories:
        - hr
    auth_mode: OAUTH2
    authorization_url: https://api.factorialhr.com/oauth/authorize
    token_url: https://api.factorialhr.com/oauth/token
    disable_pkce: true
    docs: https://docs.nango.dev/integrations/all/factorial
facebook:
    categories:
        - marketing
        - social
    auth_mode: OAUTH2
    authorization_url: https://www.facebook.com/v15.0/dialog/oauth
    token_url: https://graph.facebook.com/v15.0/oauth/access_token
    proxy:
        base_url: https://graph.facebook.com
    docs: https://docs.nango.dev/integrations/all/facebook
figjam:
    categories:
        - design
        - productivity
    alias: figma
    docs: https://docs.nango.dev/integrations/all/figjam
figma:
    categories:
        - design
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://www.figma.com/oauth
    token_url: https://www.figma.com/api/oauth/token
    refresh_url: https://www.figma.com/api/oauth/refresh
    disable_pkce: true
    proxy:
        base_url: https://api.figma.com
    docs: https://docs.nango.dev/integrations/all/figma
fireflies:
    categories:
        - analytics
        - communication
        - productivity
    auth_mode: API_KEY
    proxy:
        base_url: https://api.fireflies.ai
        headers:
            Authorization: Bearer ${apiKey}
    docs: https://docs.nango.dev/integrations/all/fireflies
fitbit:
    categories:
        - sports
    auth_mode: OAUTH2
    authorization_url: https://www.fitbit.com/oauth2/authorize
    token_url: https://api.fitbit.com/oauth2/token
    authorization_method: header
    proxy:
        base_url: https://api.fitbit.com
    docs: https://docs.nango.dev/integrations/all/fitbit
freshbooks:
    categories:
        - accounting
    auth_mode: OAUTH2
    authorization_url: https://auth.freshbooks.com/oauth/authorize
    token_url: https://api.freshbooks.com/auth/oauth/token
    authorization_params:
        response_type: code
    proxy:
        base_url: https://api.freshbooks.com
    docs: https://docs.nango.dev/integrations/all/freshbooks
freshdesk:
    categories:
        - support
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.subdomain}.freshdesk.com
    docs: https://docs.nango.dev/integrations/all/freshdesk
freshsales:
    categories:
        - crm
    auth_mode: API_KEY
    proxy:
        base_url: https://${connectionConfig.subdomain}.freshsales.io
        headers:
            Authorization: Token token=${apiKey}
        retry:
            after: 'Retry-After'
    docs: https://docs.nango.dev/integrations/all/freshsales
freshservice:
    categories:
        - support
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.subdomain}.freshservice.com
    docs: https://docs.nango.dev/integrations/all/freshservice
front:
    categories:
        - support
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://app.frontapp.com/oauth/authorize
    token_url: https://app.frontapp.com/oauth/token
    proxy:
        base_url: https://api2.frontapp.com
        paginate:
            type: link
            response_path: _results
            link_path_in_response_body: _pagination.next
    docs: https://docs.nango.dev/integrations/all/front
gainsight-cc:
    categories:
        - support
        - crm
    auth_mode: OAUTH2_CC
    token_url: https://api2-${connectionConfig.region}.insided.com/oauth2/token
    scope_separator: ' '
    token_params:
        grant_type: client_credentials
    proxy:
        base_url: https://api2-${connectionConfig.region}.insided.com
    docs: https://docs.nango.dev/integrations/all/gainsight-cc
garmin:
    categories:
        - sports
    auth_mode: OAUTH1
    request_url: https://connectapi.garmin.com/oauth-service/oauth/request_token
    authorization_url: https://connect.garmin.com/oauthConfirm
    token_url: https://connectapi.garmin.com/oauth-service/oauth/access_token
    signature_method: 'HMAC-SHA1'
    proxy:
        base_url: https://apis.garmin.com
    docs: https://docs.nango.dev/integrations/all/garmin
guru:
    categories:
        - knowledge-base
    auth_mode: BASIC
    proxy:
        base_url: https://api.getguru.com/api/v1
    docs: https://docs.nango.dev/integrations/all/guru
github:
    categories:
        - dev-tools
        - support
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://github.com/login/oauth/authorize
    token_url: https://github.com/login/oauth/access_token
    proxy:
        base_url: https://api.github.com
        retry:
            at: 'x-ratelimit-reset'
        paginate:
            type: link
            limit_name_in_request: per_page
            link_rel_in_response_header: next
    docs: https://docs.nango.dev/integrations/all/github
github-app:
    categories:
        - dev-tools
        - ticketing
    alias: github
    auth_mode: APP
    authorization_url: ${connectionConfig.appPublicLink}/installations/new
    token_url: https://api.github.com/app/installations/${connectionConfig.installation_id}/access_tokens
    webhook_routing_script: githubAppWebhookRouting
    docs: https://docs.nango.dev/integrations/all/github
github-app-oauth:
    categories:
        - dev-tools
        - ticketing
    alias: github
    auth_mode: CUSTOM
    authorization_url: ${connectionConfig.appPublicLink}/installations/new
    token_url:
        OAUTH2: https://github.com/login/oauth/access_token
        APP: https://api.github.com/app/installations/${connectionConfig.installation_id}/access_tokens
    webhook_routing_script: githubAppOauthWebhookRouting
    post_connection_script: githubAppOauthPostConnection
    docs: https://docs.nango.dev/integrations/all/github
gitlab:
    categories:
        - dev-tools
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://gitlab.com/oauth/authorize
    token_url: https://gitlab.com/oauth/token
    authorization_params:
        response_type: code
    docs: https://docs.nango.dev/integrations/all/gitlab
gong:
    categories:
        - productivity
    auth_mode: BASIC
    proxy:
        base_url: https://api.gong.io
    docs: https://docs.nango.dev/integrations/all/gong
gong-oauth:
    auth_mode: OAUTH2
    authorization_url: https://app.gong.io/oauth2/authorize
    token_url: https://app.gong.io/oauth2/generate-customer-token
    authorization_params:
        response_type: code
        access_type: offline
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    disable_pkce: true
    token_request_auth_method: basic
    proxy:
        base_url: https://api.gong.io
    docs: https://docs.nango.dev/integrations/all/gong
google:
    auth_mode: OAUTH2
    authorization_url: https://accounts.google.com/o/oauth2/v2/auth
    token_url: https://oauth2.googleapis.com/token
    authorization_params:
        response_type: code
        access_type: offline
        prompt: consent
    proxy:
        base_url: https://www.googleapis.com
        paginate:
            type: cursor
            cursor_path_in_response: nextPageToken
            limit_name_in_request: maxSize
            cursor_name_in_request: pageToken
            response_path: items
    docs: https://docs.nango.dev/integrations/all/google
google-calendar:
    categories:
        - productivity
    alias: google
    proxy:
        base_url: https://www.googleapis.com
        paginate:
            type: cursor
            cursor_path_in_response: nextPageToken
            limit_name_in_request: maxSize
            cursor_name_in_request: pageToken
            response_path: items
    docs: https://docs.nango.dev/integrations/all/google-calendar
google-docs:
    categories:
        - productivity
    alias: google
    proxy:
        base_url: https://docs.googleapis.com
    docs: https://docs.nango.dev/integrations/all/google-docs
google-mail:
    categories:
        - productivity
    alias: google
    proxy:
        base_url: https://gmail.googleapis.com
    docs: https://docs.nango.dev/integrations/all/google-mail
google-sheet:
    categories:
        - productivity
    alias: google
    proxy:
        base_url: https://sheets.googleapis.com
    docs: https://docs.nango.dev/integrations/all/google-sheet
google-drive:
    categories:
        - knowledge-base
        - storage
    alias: google
    docs: https://docs.nango.dev/integrations/all/google-drive
google-ads:
    categories:
        - marketing
    alias: google
    token_url: https://www.googleapis.com/oauth2/v3/token
    proxy:
        base_url: https://googleads.googleapis.com
        paginate:
            type: cursor
            cursor_path_in_response: nextPageToken
            limit_name_in_request: pageSize
            cursor_name_in_request: pageToken
            response_path: results
    docs: https://docs.nango.dev/integrations/all/google-ads
gorgias:
    categories:
        - e-commerce
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.gorgias.com/oauth/authorize
    token_url: https://${connectionConfig.subdomain}.gorgias.com/oauth/token
    token_request_auth_method: basic
    default_scopes:
        - offline
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://${connectionConfig.subdomain}.gorgias.com
    docs: https://docs.nango.dev/integrations/all/gorgias
greenhouse:
    categories:
        - ats
    auth_mode: OAUTH2
    authorization_url: https://api.greenhouse.io/oauth/authorize
    token_url: https://api.greenhouse.io/oauth/token
    proxy:
        base_url: https://${connectionConfig.resource}.greenhouse.io
        retry:
            after: 'Retry-After'
        paginate:
            type: link
            limit_name_in_request: per_page
            link_rel_in_response_header: next
    docs: https://docs.nango.dev/integrations/all/greenhouse
greenhouse-basic:
    categories:
        - ats
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.resource}.greenhouse.io
        retry:
            after: 'Retry-After'
        paginate:
            type: link
            limit_name_in_request: per_page
            link_rel_in_response_header: next
    docs: https://docs.nango.dev/integrations/all/greenhouse
gumroad:
    categories:
        - design
        - e-commerce
        - payment
    auth_mode: OAUTH2
    authorization_url: https://gumroad.com/oauth/authorize
    token_url: https://api.gumroad.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.gumroad.com
    docs: https://docs.nango.dev/integrations/all/gumroad
gusto:
    categories:
        - hr
    auth_mode: OAUTH2
    authorization_url: https://api.gusto.com/oauth/authorize
    token_url: https://api.gusto.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.gusto.com
    docs: https://docs.nango.dev/integrations/all/gusto
gusto-demo:
    auth_mode: OAUTH2
    authorization_url: https://api.gusto-demo.com/oauth/authorize
    token_url: https://api.gusto-demo.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.gusto-demo.com
    docs: https://docs.nango.dev/integrations/all/gusto
hackerrank-work:
    auth_mode: BASIC
    proxy:
        base_url: https://www.hackerrank.com
    docs: https://docs.nango.dev/integrations/all/hackerrank-work
harvest:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://id.getharvest.com/oauth2/authorize
    token_url: https://id.getharvest.com/api/v2/oauth2/token
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        headers:
            User-Agent: ${connectionConfig.appDetails}
        retry:
            after: 'Retry-After'
        base_url: https://api.harvestapp.com
    docs: https://docs.nango.dev/integrations/all/harvest
health-gorilla:
    auth_mode: OAUTH2
    authorization_url: https://api.healthgorilla.com/oauth/authorize
    token_url: https://api.healthgorilla.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://healthgorilla.com
    docs: https://docs.nango.dev/integrations/all/healthgorilla
hibob-service-user:
    categories:
        - hr
    auth_mode: BASIC
    proxy:
        base_url: https://api.hibob.com
        verification:
            method: GET
            endpoint: /v1/company/named-lists
    docs: https://apidocs.hibob.com/
highlevel:
    categories:
        - marketing
    auth_mode: OAUTH2
    authorization_url: https://marketplace.gohighlevel.com/oauth/chooselocation
    token_url: https://services.leadconnectorhq.com/oauth/token
    scope_separator: ' '
    proxy:
        base_url: https://services.leadconnectorhq.com
    disable_pkce: true
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/highlevel
highlevel-white-label:
    categories:
        - marketing
    auth_mode: OAUTH2
    authorization_url: https://marketplace.leadconnectorhq.com/oauth/chooselocation
    token_url: https://services.leadconnectorhq.com/oauth/token
    scope_separator: ' '
    proxy:
        base_url: https://services.leadconnectorhq.com
    disable_pkce: true
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/highlevel
hubspot:
    categories:
        - marketing
        - support
        - crm
    auth_mode: OAUTH2
    authorization_url: https://app.hubspot.com/oauth/authorize
    token_url: https://api.hubapi.com/oauth/v1/token
    connection_configuration:
        - portalId
    post_connection_script: hubspotPostConnection
    webhook_routing_script: hubspotWebhookRouting
    proxy:
        base_url: https://api.hubapi.com
        decompress: true
        paginate:
            type: cursor
            cursor_path_in_response: paging.next.after
            limit_name_in_request: limit
            cursor_name_in_request: after
            response_path: results
    docs: https://docs.nango.dev/integrations/all/hubspot
insightly:
    categories:
        - crm
    auth_mode: BASIC
    proxy:
        base_url: https://api.${connectionConfig.pod}.insightly.com
        verification:
            method: GET
            endpoint: /v3.1/Contacts
    docs: https://docs.nango.dev/integrations/all/insightly
instantly:
    categories:
        - marketing
        - communication
    auth_mode: API_KEY
    proxy:
        base_url: https://api.instantly.ai/api
    docs: https://docs.nango.dev/integrations/all/instantly
instagram:
    categories:
        - marketing
        - social
    auth_mode: OAUTH2
    authorization_url: https://api.instagram.com/oauth/authorize
    token_url: https://api.instagram.com/oauth/access_token
    proxy:
        base_url: https://graph.instagram.com
    docs: https://docs.nango.dev/integrations/all/instagram
intercom:
    categories:
        - marketing
        - support
        - surveys
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://app.intercom.io/oauth
    token_url: https://api.intercom.io/auth/eagle/token
    proxy:
        base_url: https://api.intercom.io
    docs: https://docs.nango.dev/integrations/all/intercom
intuit:
    categories:
        - accounting
    auth_mode: OAUTH2
    authorization_url: https://appcenter.intuit.com/connect/oauth2
    token_url: https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer
    proxy:
        base_url: https://quickbooks.api.intuit.com
    docs: https://docs.nango.dev/integrations/all/intuit
jira:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://auth.atlassian.com/authorize
    token_url: https://auth.atlassian.com/oauth/token
    authorization_params:
        audience: api.atlassian.com
        prompt: consent
    connection_configuration:
        - cloudId
        - accountId
    proxy:
        base_url: https://api.atlassian.com
        paginate:
            type: link
            link_rel_in_response_header: next
            limit_name_in_request: limit
            response_path: results
            link_path_in_response_body: _links.next
    post_connection_script: jiraPostConnection
    webhook_routing_script: jiraWebhookRouting
    docs: https://docs.nango.dev/integrations/all/jira
jira-basic:
    categories:
        - productivity
        - ticketing
    auth_mode: BASIC
    proxy:
        retry:
            after: 'Retry-After'
        base_url: https://${connectionConfig.subdomain}.atlassian.net
        verification:
            method: GET
            endpoint: /rest/api/3/events
    docs: https://docs.nango.dev/integrations/all/jira
jira-data-center:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.endpointURL}/rest/oauth2/latest/authorize
    authorization_params:
        grant_type: authorization_code
    token_url: https://${connectionConfig.endpointURL}/rest/oauth2/latest/token
    connection_configuration:
        - endpointURL
    docs: https://docs.nango.dev/integrations/all/jira-data-center
jotform:
    categories:
        - surveys
    auth_mode: API_KEY
    proxy:
        base_url: https://api.jotform.com
        headers:
            APIKEY: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/jotform
helpscout-docs:
    auth_mode: BASIC
    proxy:
        retry:
            after: 'X-RateLimit-Reset'
        base_url: https://docsapi.helpscout.net
    docs: https://docs.nango.dev/integrations/all/helpscout
helpscout-mailbox:
    auth_mode: OAUTH2
    authorization_url: https://secure.helpscout.net/authentication/authorizeClientApplication
    token_url: https://api.helpscout.net/v2/oauth2/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        retry:
            after: 'X-RateLimit-Retry-After'
        base_url: https://api.helpscout.net
    docs: https://docs.nango.dev/integrations/all/helpscout
keap:
    categories:
        - marketing
    auth_mode: OAUTH2
    authorization_url: https://accounts.infusionsoft.com/app/oauth/authorize
    token_url: https://api.infusionsoft.com/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.infusionsoft.com
    docs: https://docs.nango.dev/integrations/all/keap
klipfolio:
    categories:
        - productivity
        - dev-tools
    auth_mode: API_KEY
    proxy:
        base_url: https://app.klipfolio.com
        headers:
            kf-api-key: ${apiKey}
        verification:
            method: GET
            endpoint: /api/1.0/profile
    docs: https://docs.nango.dev/integrations/all/klipfolio
klaviyo:
    categories:
        - marketing
    auth_mode: API_KEY
    proxy:
        base_url: https://a.klaviyo.com
        headers:
            Authorization: Klaviyo-API-Key ${apiKey}
            revision: ${connectionConfig.revisionHeader}
        verification:
            method: GET
            endpoint: /api/accounts
        retry:
            after: 'Retry-After'
    docs: https://docs.nango.dev/integrations/all/klaviyo
klaviyo-oauth:
    categories:
        - marketing
    auth_mode: OAUTH2
    authorization_url: https://www.klaviyo.com/oauth/authorize
    token_url: https://a.klaviyo.com/oauth/token
    token_request_auth_method: basic
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://a.klaviyo.com
        headers:
            revision: ${connectionConfig.revisionHeader}
        retry:
            after: 'Retry-After'
    docs: https://docs.nango.dev/integrations/all/klaviyo
kustomer:
    categories:
        - crm
    auth_mode: API_KEY
    proxy:
        base_url: https://${connectionConfig.extension}.kustomerapp.com
        retry:
            after: 'x-ratelimit-reset'
        headers:
            Authorization: Bearer ${apiKey}
    docs: https://docs.nango.dev/integrations/all/kustomer
lessonly:
    categories:
        - productivity
    auth_mode: BASIC
    proxy:
        base_url: https://api.lessonly.com/api
    docs: https://docs.nango.dev/integrations/all/lessonly
lever:
    categories:
        - ats
    auth_mode: OAUTH2
    authorization_url: https://auth.lever.co/authorize
    token_url: https://auth.lever.co/oauth/token
    authorization_params:
        response_type: code
        prompt: consent
        audience: https://api.lever.co/v1
    proxy:
        base_url: https://api.lever.co
    docs: https://docs.nango.dev/integrations/all/lever
lever-basic:
    auth_mode: BASIC
    proxy:
        base_url: https://api.lever.co
    docs: https://docs.nango.dev/integrations/all/lever
lever-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://sandbox-lever.auth0.com/authorize
    token_url: https://sandbox-lever.auth0.com/oauth/token
    authorization_params:
        response_type: code
        prompt: consent
        audience: https://api.sandbox.lever.co/v1/
    proxy:
        base_url: https://api.sandbox.lever.co
    docs: https://docs.nango.dev/integrations/all/lever
lever-basic-sandbox:
    auth_mode: BASIC
    proxy:
        base_url: https://api.sandbox.lever.co
    docs: https://docs.nango.dev/integrations/all/lever
linear:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://linear.app/oauth/authorize
    token_url: https://api.linear.app/oauth/token
    scope_separator: ','
    authorization_params:
        prompt: consent
    proxy:
        base_url: https://api.linear.app
    disable_pkce: true
    webhook_routing_script: linearWebhookRouting
    post_connection_script: linearPostConnection
    webhook_user_defined_secret: true
    docs: https://docs.nango.dev/integrations/all/linear
linkedin:
    categories:
        - ats
        - social
    auth_mode: OAUTH2
    authorization_url: https://www.linkedin.com/oauth/v2/authorization
    token_url: https://www.linkedin.com/oauth/v2/accessToken
    disable_pkce: true
    proxy:
        base_url: https://api.linkedin.com
    docs: https://docs.nango.dev/integrations/all/linkedin
linkhut:
    auth_mode: OAUTH2
    authorization_url: https://ln.ht/_/oauth/authorize
    token_url: https://api.ln.ht/v1/oauth/token
    proxy:
        base_url: https://api.ln.ht
    docs: https://docs.nango.dev/integrations/all/linkhut
luma:
    categories:
        - productivity
        - ticketing
    auth_mode: API_KEY
    proxy:
        headers:
            x-luma-api-key: ${apiKey}
        base_url: https://api.lu.ma
        verification:
            method: GET
            endpoint: /public/v1/user/get-self
    docs: https://docs.nango.dev/integrations/all/luma
listmonk:
    categories:
        - marketing
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.domain}/api
        headers:
            content-type: application/json
        retry:
            after: 'Retry-After'
        verification:
            method: GET
            endpoint: /lists
mailgun:
    categories:
        - marketing
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.region}.mailgun.net
        verification:
            method: GET
            endpoint: /v4/domains
    docs: https://docs.nango.dev/integrations/all/mailgun
mailchimp:
    categories:
        - marketing
        - surveys
    auth_mode: OAUTH2
    authorization_url: https://login.mailchimp.com/oauth2/authorize
    token_url: https://login.mailchimp.com/oauth2/token
    authorization_params:
        response_type: code
    docs: https://docs.nango.dev/integrations/all/mailchimp
#Untested configuration. Please reach out if you have a test account that we can use to test it.
marketo:
    auth_mode: OAUTH2_CC
    proxy:
        base_url: https://${connectionConfig.endpointURL}
    token_url: https://${connectionConfig.identityURL}/oauth/token
    token_params:
        grant_type: client_credentials
    docs: https://docs.nango.dev/integrations/all/marketo
medallia:
    categories:
        - crm
        - support
        - surveys
    auth_mode: OAUTH2_CC
    token_url: https://${connectionConfig.reportingInstance}/oauth/${connectionConfig.tenantName}/token
    token_request_auth_method: basic
    token_params:
        grant_type: client_credentials
    proxy:
        retry:
            after: 'X-RateLimit-Reset'
        base_url: https://${connectionConfig.gatewayUrl}.apis.medallia.com
    docs: https://docs.nango.dev/integrations/all/medallia
microsoft:
    auth_mode: OAUTH2
    authorization_url: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
    token_url: https://login.microsoftonline.com/common/oauth2/v2.0/token
    disable_pkce: true
    default_scopes:
        - offline_access
    authorization_params:
        response_type: code
        response_mode: query
        prompt: consent
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://graph.microsoft.com
        retry:
            after: 'Retry-After'
        decompress: true
    docs: https://docs.nango.dev/integrations/all/microsoft
microsoft-teams:
    categories:
        - productivity
        - video
    alias: microsoft
    webhook_routing_script: microsoftTeamsWebhookRouting
    post_connection_script: microsoftTeamsPostConnection
    docs: https://docs.nango.dev/integrations/all/microsoft-teams
microsoft-tenant-specific:
    categories:
        - erp
    auth_mode: OAUTH2
    authorization_url: https://login.microsoftonline.com/${connectionConfig.tenant}/oauth2/v2.0/authorize
    token_url: https://login.microsoftonline.com/${connectionConfig.tenant}/oauth2/v2.0/token
    disable_pkce: true
    default_scopes:
        - offline_access
    authorization_params:
        response_type: code
        response_mode: query
        prompt: consent
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/microsoft-tenant-specific
microsoft-ads:
    alias: microsoft
    categories:
        - marketing
    default_scopes:
        - https://ads.microsoft.com/msads.manage
        - offline_access
    proxy:
        base_url: https://clientcenter.api.bingads.microsoft.com/Api
    refresh_params:
        grant_type: refresh_token
        scope: https://ads.microsoft.com/msads.manage
    docs: https://docs.nango.dev/integrations/all/microsoft-ads
microsoft-entra-id:
    categories:
        - other
    alias: microsoft
    docs: https://docs.nango.dev/integrations/all/microsoft-entra-id
microsoft-power-bi:
    categories:
        - productivity
    alias: microsoft
    proxy:
        base_url: https://api.powerbi.com
    docs: https://docs.nango.dev/integrations/all/microsoft-power-bi
mixpanel:
    categories:
        - analytics
    auth_mode: BASIC
    proxy:
        base_url: https://mixpanel.com
    docs: https://docs.nango.dev/integrations/all/mixpanel
miro:
    categories:
        - design
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://miro.com/oauth/authorize
    token_url: https://api.miro.com/v1/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.miro.com
    docs: https://docs.nango.dev/integrations/all/miro
monday:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://auth.monday.com/oauth2/authorize
    token_url: https://auth.monday.com/oauth2/token
    docs: https://docs.nango.dev/integrations/all/monday
mural:
    categories:
        - design
    auth_mode: OAUTH2
    authorization_url: https://app.mural.co/api/public/v1/authorization/oauth2
    token_url: https://app.mural.co/api/public/v1/authorization/oauth2/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://app.mural.co
    docs: https://docs.nango.dev/integrations/all/mural
nationbuilder:
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.accountId}.nationbuilder.com/oauth/authorize
    token_url: https://${connectionConfig.accountId}.nationbuilder.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    default_scopes:
        - default
    docs: https://docs.nango.dev/integrations/all/nationbuilder
netsuite:
    categories:
        - accounting
        - erp
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.accountId}.app.netsuite.com/app/login/oauth2/authorize.nl
    authorization_params:
        prompt: consent
    token_url: https://${connectionConfig.accountId}.suitetalk.api.netsuite.com/services/rest/auth/oauth2/v1/token
    default_scopes:
        - rest_webservices
    proxy:
        base_url: https://${connectionConfig.accountId}.suitetalk.api.netsuite.com/services/rest/record/v1
        retry:
            after: 'Retry-After'
    docs: https://docs.nango.dev/integrations/all/netsuite
netsuite-tba:
    alias: netsuite
    auth_mode: TBA
    docs: https://docs.nango.dev/integrations/all/netsuite
next-cloud-ocs:
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.domain}/ocs/v1.php
        headers:
            'OCS-APIRequest': 'true'
    docs: http://docs.nango.dev/integrations/all/next-cloud
notion:
    categories:
        - knowledge-base
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://api.notion.com/v1/oauth/authorize
    token_url: https://api.notion.com/v1/oauth/token
    authorization_params:
        response_type: code
        owner: user
    authorization_method: header
    body_format: json
    proxy:
        retry:
            after: 'Retry-After'
        base_url: https://api.notion.com
        headers:
            'Notion-Version': '2022-06-28'
        paginate:
            type: cursor
            cursor_path_in_response: start_cursor
            cursor_name_in_request: start_cursor
            limit_name_in_request: page_size
            response_path: results
    docs: https://docs.nango.dev/integrations/all/notion
okta:
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.okta.com/oauth2/v1/authorize
    token_url: https://${connectionConfig.subdomain}.okta.com/oauth2/v1/token
    authorization_params:
        response_type: code
        response_mode: query
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/okta
one-drive:
    categories:
        - knowledge-base
        - storage
    alias: microsoft
    docs: https://docs.nango.dev/integrations/all/one-drive
one-note:
    categories:
        - productivity
    alias: microsoft
    docs: https://docs.nango.dev/integrations/all/one-note
ory:
    categories:
        - other
    auth_mode: OAUTH2_CC
    proxy:
        base_url: https://${connectionConfig.projectSlug}.projects.oryapis.com
    token_url: https://${connectionConfig.projectSlug}.projects.oryapis.com/oauth2/token
    scope_separator: ' '
    token_params:
        grant_type: client_credentials
    docs: https://docs.nango.dev/integrations/all/ory
osu:
    categories:
        - gaming
    auth_mode: OAUTH2
    authorization_url: https://osu.ppy.sh/oauth/authorize
    token_url: https://osu.ppy.sh/oauth/token
    default_scopes:
        - identify
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://osu.ppy.sh
    docs: https://docs.nango.dev/integrations/all/osu
oura:
    categories:
        - sports
    auth_mode: OAUTH2
    authorization_url: https://cloud.ouraring.com/oauth/authorize
    token_url: https://api.ouraring.com/oauth/token
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.ouraring.com
    docs: https://docs.nango.dev/integrations/all/oura
outlook:
    categories:
        - communication
    alias: microsoft
    docs: https://docs.nango.dev/integrations/all/outlook
outreach:
    categories:
        - marketing
    auth_mode: OAUTH2
    authorization_url: https://api.outreach.io/oauth/authorize
    token_url: https://api.outreach.io/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.outreach.io
    docs: https://docs.nango.dev/integrations/all/outreach
pagerduty:
    categories:
        - dev-tools
    auth_mode: OAUTH2
    authorization_url: https://app.pagerduty.com/oauth/authorize
    token_url: https://app.pagerduty.com/oauth/token
    proxy:
        base_url: https://api.pagerduty.com
    docs: https://docs.nango.dev/integrations/all/pagerduty
pandadoc:
    categories:
        - legal
    auth_mode: OAUTH2
    authorization_url: https://app.pandadoc.com/oauth2/authorize
    token_url: https://api.pandadoc.com/oauth2/access_token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.pandadoc.com
    docs: https://docs.nango.dev/integrations/all/pandadoc
payfit:
    categories:
        - hr
    auth_mode: OAUTH2
    authorization_url: https://oauth.payfit.com/authorize
    token_url: https://app.pagerduty.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    docs: https://docs.nango.dev/integrations/all/payfit
paypal:
    categories:
        - payment
    auth_mode: OAUTH2
    authorization_url: https://www.paypal.com/signin/authorize
    token_url: https://api.paypal.com/v1/oauth2/token
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/paypal
paypal-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://www.sandbox.paypal.com/signin/authorize
    token_url: https://api-m.sandbox.paypal.com/v1/oauth2/token
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/paypal
pendo:
    categories:
        - analytics
    auth_mode: API_KEY
    proxy:
        base_url: https://app.pendo.io
        headers:
            x-pendo-integration-key: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/pendo
pennylane:
    categories:
        - accounting
        - banking
        - invoicing
        - payment
    auth_mode: OAUTH2
    authorization_url: https://app.pennylane.com/oauth/authorize
    token_url: https://app.pennylane.com/oauth/token
    proxy:
        base_url: https://app.pennylane.com
    scope_separator: '+'
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/pennylane
peopledatalabs:
    categories:
        - analytics
    auth_mode: API_KEY
    proxy:
        base_url: https://api.peopledatalabs.com
        query:
            api_key: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/peopledatalabs
personio:
    categories:
        - hr
    auth_mode: OAUTH2_CC
    proxy:
        base_url: https://api.personio.de/v1
        headers:
            x-personio-partner-id: ${connectionConfig.partnerId}
            x-personio-app-id: ${connectionConfig.appId}
    token_url: https://api.personio.de/v1/auth
    body_format: json
    docs: https://docs.nango.dev/integrations/all/personio
personio-recruiting:
    categories:
        - hr
    auth_mode: API_KEY
    proxy:
        base_url: https://api.personio.de/v1
        headers:
            Authorization: Bearer ${apiKey}
            x-company-id: ${connectionConfig.companyId}
            x-personio-partner-id: ${connectionConfig.partnerId}
            x-personio-app-id: ${connectionConfig.appId}
        verification:
            method: GET
            endpoint: /xml?language=en
            base_url_override: https://${connectionConfig.company}.jobs.personio.de
            headers:
                accept: application/xml
                content-type: xml
    docs: https://docs.nango.dev/integrations/all/personio
pingboard:
    categories:
        - productivity
    auth_mode: OAUTH2_CC
    proxy:
        base_url: https://app.pingboard.com/api/v2
    token_url: https://app.pingboard.com/oauth/token
    scope_separator: ' '
    token_params:
        grant_type: client_credentials
    docs: https://docs.nango.dev/integrations/all/pingboard
pinterest:
    categories:
        - design
        - marketing
        - social
        - video
    auth_mode: OAUTH2
    authorization_url: https://www.pinterest.com/oauth
    token_url: https://api.pinterest.com/v5/oauth/token
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.pinterest.com
    docs: https://docs.nango.dev/integrations/all/pinterest
pipedrive:
    categories:
        - crm
    auth_mode: OAUTH2
    authorization_url: https://oauth.pipedrive.com/oauth/authorize
    token_url: https://oauth.pipedrive.com/oauth/token
    token_response_metadata:
        - api_domain
    proxy:
        base_url: ${connectionConfig.api_domain}/api
        decompress: true
        paginate:
            type: offset
            offset_name_in_request: start
            response_path: data
            limit_name_in_request: limit
    docs: https://docs.nango.dev/integrations/all/pipedrive
pivotaltracker:
    categories:
        - productivity
    auth_mode: API_KEY
    proxy:
        headers:
            X-TrackerToken: ${apiKey}
        base_url: https://www.pivotaltracker.com/services/v5
        verification:
            method: GET
            endpoint: /accounts
    docs: https://docs.nango.dev/integrations/all/pivotaltracker
posthog:
    categories:
        - dev-tools
    auth_mode: API_KEY
    proxy:
        headers:
            Authorization: Bearer ${apiKey}
        base_url: https://${connectionConfig.subdomain}.posthog.com
        verification:
            method: GET
            endpoint: /api/users/@me
    docs: https://docs.nango.dev/integrations/all/posthog
productboard:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://app.productboard.com/oauth2/authorize
    token_url: https://app.productboard.com/oauth2/token
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        headers:
            X-Version: '1'
        base_url: https://api.productboard.com
    docs: https://docs.nango.dev/integrations/all/productboard
qualtrics:
    categories:
        - surveys
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.qualtrics.com/oauth2/auth
    token_url: https://${connectionConfig.subdomain}.qualtrics.com/oauth2/token
    proxy:
        base_url: https://${connectionConfig.subdomain}.qualtrics.com
    docs: https://docs.nango.dev/integrations/all/qualtrics
quickbooks:
    categories:
        - accounting
    auth_mode: OAUTH2
    authorization_url: https://appcenter.intuit.com/connect/oauth2
    token_url: https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer
    redirect_uri_metadata:
        - realmId
    proxy:
        base_url: https://quickbooks.api.intuit.com
    docs: https://docs.nango.dev/integrations/all/quickbooks
ramp:
    categories:
        - banking
    auth_mode: OAUTH2
    authorization_url: https://app.ramp.com/v1/authorize
    token_url: https://api.ramp.com/developer/v1/token
    authorization_method: header
    proxy:
        base_url: https://api.ramp.com
    docs: https://docs.nango.dev/integrations/all/ramp
ramp-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://demo.ramp.com/v1/authorize
    token_url: https://demo-api.ramp.com/developer/v1/token
    authorization_method: header
    proxy:
        base_url: https://demo-api.ramp.com
    docs: https://docs.nango.dev/integrations/all/ramp
reddit:
    categories:
        - social
    auth_mode: OAUTH2
    authorization_url: https://www.reddit.com/api/v1/authorize
    token_url: https://www.reddit.com/api/v1/access_token
    authorization_method: header
    authorization_params:
        duration: permanent
    proxy:
        base_url: https://oauth.reddit.com
    docs: https://docs.nango.dev/integrations/all/reddit
refiner:
    categories:
        - surveys
    auth_mode: API_KEY
    proxy:
        headers:
            Authorization: Bearer ${apiKey}
        base_url: https://api.refiner.io/v1
    docs: https://docs.nango.dev/integrations/all/refiner
ring-central:
    categories:
        - support
    auth_mode: OAUTH2
    authorization_url: https://platform.ringcentral.com/restapi/oauth/authorize
    token_url: https://platform.ringcentral.com/restapi/oauth/token
    authorization_method: header
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://platform.ringcentral.com
    docs: https://docs.nango.dev/integrations/all/ring-central
ring-central-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://platform.devtest.ringcentral.com/restapi/oauth/authorize
    token_url: https://platform.devtest.ringcentral.com/restapi/oauth/token
    authorization_method: header
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://platform.devtest.ringcentral.com
    docs: https://docs.nango.dev/integrations/all/ring-central
segment:
    categories:
        - analytics
        - marketing
    auth_mode: OAUTH2
    authorization_url: https://id.segmentapis.com/oauth2/auth
    token_url: https://id.segmentapis.com/oauth2/token
    token_request_auth_method: basic
    proxy:
        base_url: https://api.segment.io
    docs: https://docs.nango.dev/integrations/all/segment
sage:
    categories:
        - accounting
        - erp
    auth_mode: OAUTH2
    authorization_url: https://www.sageone.com/oauth2/auth/central
    token_url: https://oauth.accounting.sage.com/token
    authorization_params:
        filter: apiv3.1
    proxy:
        base_url: https://api.accounting.sage.com
    docs: https://docs.nango.dev/integrations/all/sage
salesforce:
    categories:
        - crm
    auth_mode: OAUTH2
    authorization_url: https://login.salesforce.com/services/oauth2/authorize
    token_url: https://login.salesforce.com/services/oauth2/token
    authorization_params:
        prompt: consent
    default_scopes:
        - offline_access
    token_response_metadata:
        - instance_url
    proxy:
        base_url: ${connectionConfig.instance_url}
    webhook_routing_script: salesforceWebhookRouting
    post_connection_script: salesforcePostConnection
    docs: https://docs.nango.dev/integrations/all/salesforce
salesforce-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://test.salesforce.com/services/oauth2/authorize
    token_url: https://test.salesforce.com/services/oauth2/token
    default_scopes:
        - offline_access
    token_response_metadata:
        - instance_url
    proxy:
        base_url: ${connectionConfig.instance_url}
    docs: https://docs.nango.dev/integrations/all/salesforce
salesloft:
    categories:
        - marketing
    auth_mode: OAUTH2
    authorization_url: https://accounts.salesloft.com/oauth/authorize
    token_url: https://accounts.salesloft.com/oauth/token
    proxy:
        base_url: https://api.salesloft.com
    docs: https://docs.nango.dev/integrations/all/salesloft
sendgrid:
    categories:
        - marketing
    auth_mode: API_KEY
    proxy:
        headers:
            Authorization: Bearer ${apiKey}
        base_url: https://api.sendgrid.com
    docs: https://docs.nango.dev/integrations/all/sendgrid
servicem8:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://go.servicem8.com/oauth/authorize
    token_url: https://go.servicem8.com/oauth/access_token
    proxy:
        base_url: https://api.servicem8.com
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/servicem8
signnow:
    categories:
        - legal
    auth_mode: OAUTH2
    authorization_url: https://app.signnow.com/authorize
    token_url: https://api.signnow.com/oauth2/token
    disable_pkce: true
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/signnow
signnow-sandbox:
    categories:
        - legal
    auth_mode: OAUTH2
    authorization_url: https://app-eval.signnow.com/authorize
    token_url: https://api-eval.signnow.com/oauth2/token
    disable_pkce: true
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/signnow
servicenow:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.service-now.com/oauth_auth.do
    token_url: https://${connectionConfig.subdomain}.service-now.com/oauth_token.do
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    docs: https://docs.nango.dev/integrations/all/servicenow
sharepoint-online:
    categories:
        - storage
        - communication
    alias: microsoft
    docs: https://docs.nango.dev/integrations/all/sharepoint-online
shopify:
    categories:
        - e-commerce
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.myshopify.com/admin/oauth/authorize
    token_url: https://${connectionConfig.subdomain}.myshopify.com/admin/oauth/access_token
    proxy:
        base_url: https://${connectionConfig.subdomain}.myshopify.com
        headers:
            X-Shopify-Access-Token: ${accessToken}
    docs: https://docs.nango.dev/integrations/all/shopify
shortcut:
    categories:
        - dev-tools
        - productivity
    auth_mode: API_KEY
    proxy:
        base_url: https://api.app.shortcut.com
        headers:
            Shortcut-Token: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/shortcut
slack:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://slack.com/oauth/v2/authorize
    token_url: https://slack.com/api/oauth.v2.access
    token_response_metadata:
        - incoming_webhook.url
        - incoming_webhook.channel
        - incoming_webhook.channel_id
        - bot_user_id
        - team.id
    proxy:
        base_url: https://slack.com/api
        paginate:
            type: cursor
            cursor_path_in_response: response_metadata.next_cursor
            cursor_name_in_request: cursor
            limit_name_in_request: limit
    webhook_routing_script: slackWebhookRouting
    docs: https://docs.nango.dev/integrations/all/slack
smartrecruiters-api-key:
    auth_mode: API_KEY
    proxy:
        base_url: https://api.smartrecruiters.com
        headers:
            X-SmartToken: ${apiKey}
    docs: https://docs.nango.dev/integrations/all/smartrecruiters
smartsheet:
    auth_mode: OAUTH2
    authorization_url: https://app.smartsheet.com/b/authorize
    token_url: https://api.smartsheet.com/2.0/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    proxy:
        base_url: https://api.smartsheet.com
    docs: https://docs.nango.dev/integrations/all/smartsheet
smugmug:
    auth_mode: OAUTH1
    request_url: https://api.smugmug.com/services/oauth/1.0a/getRequestToken
    authorization_url: https://api.smugmug.com/services/oauth/1.0a/authorize
    token_url: https://api.smugmug.com/services/oauth/1.0a/getAccessToken
    scope_separator: ','
    signature_method: 'PLAINTEXT'
    proxy:
        base_url: https://www.smugmug.com
    docs: https://docs.nango.dev/integrations/all/smugmug
snowflake:
    categories:
        - dev-tools
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.snowflake_account_url}/oauth/authorize
    token_url: https://${connectionConfig.snowflake_account_url}/oauth/token-request
    token_request_auth_method: basic
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://{connectionConfig.snowflake_account_url}
    docs: https://docs.nango.dev/integrations/all/snowflake
splitwise:
    categories:
        - payment
        - social
    auth_mode: OAUTH2
    authorization_url: https://secure.splitwise.com/oauth/authorize
    token_url: https://secure.splitwise.com/oauth/token
    proxy:
        base_url: https://secure.splitwise.com
    docs: https://docs.nango.dev/integrations/all/splitwise
spotify:
    categories:
        - other
    auth_mode: OAUTH2
    authorization_url: https://accounts.spotify.com/authorize
    token_url: https://accounts.spotify.com/api/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.spotify.com
    docs: https://docs.nango.dev/integrations/all/spotify
spotify-oauth2-cc:
    categories:
        - other
    auth_mode: OAUTH2_CC
    token_url: https://accounts.spotify.com/api/token
    token_request_auth_method: basic
    scope_separator: ' '
    token_params:
        grant_type: client_credentials
    proxy:
        base_url: https://api.spotify.com
    docs: https://docs.nango.dev/integrations/all/spotify
squarespace:
    categories:
        - dev-tools
        - design
    auth_mode: OAUTH2
    authorization_url: https://login.squarespace.com/api/1/login/oauth/provider/authorize
    token_url: https://login.squarespace.com/api/1/login/oauth/provider/tokens
    token_request_auth_method: basic
    scope_separator: ','
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.squarespace.com
        headers:
            User-Agent: ${connectionConfig.customappDescription}
    docs: https://docs.nango.dev/integrations/all/squarespace
squareup:
    categories:
        - payment
    auth_mode: OAUTH2
    authorization_url: https://connect.squareup.com/oauth2/authorize
    token_url: https://connect.squareup.com/oauth2/token
    disable_pkce: true
    decode_url: true
    authorization_params:
        response_type: code
        session: false
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://connect.squareup.com
    docs: https://docs.nango.dev/integrations/all/squareup
squareup-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://connect.squareupsandbox.com/oauth2/authorize
    token_url: https://connect.squareupsandbox.com/oauth2/token
    disable_pkce: true
    authorization_params:
        response_type: code
        session: false
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://connect.squareupsandbox.com
    docs: https://docs.nango.dev/integrations/all/squareup
stackexchange:
    categories:
        - knowledge-base
        - support
    auth_mode: OAUTH2
    authorization_url: https://stackoverflow.com/oauth
    token_url: https://stackoverflow.com/oauth/access_token/json
    default_scopes:
        - no_expiry
    proxy:
        base_url: https://api.stackexchange.com
    docs: https://docs.nango.dev/integrations/all/stackexchange
strava:
    categories:
        - social
        - sports
    auth_mode: OAUTH2
    authorization_url: https://www.strava.com/oauth/mobile/authorize
    token_url: https://www.strava.com/api/v3/oauth/token
    scope_separator: ','
    authorization_params:
        response_type: code
        approval_prompt: auto
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://www.strava.com
    docs: https://docs.nango.dev/integrations/all/strava
strava-web:
    categories:
        - social
        - sports
    auth_mode: OAUTH2
    authorization_url: https://www.strava.com/oauth/authorize
    token_url: https://www.strava.com/api/v3/oauth/token
    scope_separator: ','
    authorization_params:
        response_type: code
        approval_prompt: force
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://www.strava.com
    docs: https://docs.nango.dev/integrations/all/strava-web
stripe:
    categories:
        - payment
    auth_mode: OAUTH2
    authorization_url: https://connect.stripe.com/oauth/authorize
    token_url: https://connect.stripe.com/oauth/token
    docs: https://docs.nango.dev/integrations/all/stripe
stripe-express:
    categories:
        - payment
    auth_mode: OAUTH2
    authorization_url: https://connect.stripe.com/express/oauth/authorize
    token_url: https://connect.stripe.com/oauth/token
    token_response_metadata:
        - stripe_user_id
    proxy:
        base_url: https://api.stripe.com
    docs: https://docs.nango.dev/integrations/all/stripe-express
stripe-app:
    categories:
        - payment
    auth_mode: OAUTH2
    authorization_url: https://marketplace.stripe.com/oauth/v2/authorize
    token_url: https://api.stripe.com/v1/oauth/token
    disable_pkce: true
    proxy:
        base_url: https://api.stripe.com
    refresh_params:
        grant_type: refresh_token
    webhook_routing_script: stripeAppWebhookRouting
    docs: https://docs.nango.dev/integrations/all/stripe-app
stripe-app-sandbox:
    auth_mode: OAUTH2
    authorization_url: https://marketplace.stripe.com/oauth/v2/${connectionConfig.appDomain}/authorize
    token_url: https://api.stripe.com/v1/oauth/token
    disable_pkce: true
    proxy:
        base_url: https://api.stripe.com
    refresh_params:
        grant_type: refresh_token
    webhook_routing_script: stripeAppWebhookRouting
    docs: https://docs.nango.dev/integrations/all/stripe-app
survey-monkey:
    categories:
        - surveys
    auth_mode: OAUTH2
    authorization_url: https://api.surveymonkey.com/oauth/authorize
    token_url: https://api.surveymonkey.com/oauth/token
    disable_pkce: true
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    proxy:
        base_url: https://api.surveymonkey.com
    docs: https://docs.nango.dev/integrations/all/survey-monkey
tableau:
    categories:
        - analytics
    auth_mode: TABLEAU
    token_url: https://${connectionConfig.myServer}/api/${connectionConfig.version}/auth/signin
    proxy:
        headers:
            Accept: application/json
            Content-Type: application/json
        base_url: https://${connectionConfig.myServer}/api/${connectionConfig.version}
    docs: https://docs.nango.dev/integrations/all/tableau
teamtailor:
    categories:
        - ats
    auth_mode: API_KEY
    proxy:
        base_url: https://${connectionConfig.extension}.teamtailor.com
        retry:
            after: 'X-Rate-Limit-Reset'
        headers:
            Authorization: Token token=${apiKey}
            X-Api-Version: '20210218'
    docs: https://docs.nango.dev/integrations/all/teamtailor
teamwork:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://www.teamwork.com/launchpad/login
    token_url: https://www.teamwork.com/launchpad/v1/token.json
    token_response_metadata:
        - installation.apiEndPoint
    proxy:
        base_url: ${connectionConfig.installation.apiEndPoint}
    docs: https://docs.nango.dev/integrations/all/teamwork
ticktick:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://ticktick.com/oauth/authorize
    token_url: https://ticktick.com/oauth/token
    scope_separator: ' '
    proxy:
        base_url: https://api.ticktick.com
    docs: https://docs.nango.dev/integrations/all/ticktick
tiktok-accounts:
    categories:
        - social
    auth_mode: OAUTH2
    authorization_url: https://www.tiktok.com/v2/auth/authorize/
    token_url: https://business-api.tiktok.com/open_api/v1.3/tt_user/oauth2/token/
    refresh_url: https://business-api.tiktok.com/open_api/v1.3/tt_user/oauth2/refresh_token/
    proxy:
        base_url: https://business-api.tiktok.com/open_api/v1.3/
    authorization_params:
        response_type: code
    authorization_url_replacements:
        client_id: client_key
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    scope_separator: ','
    docs: https://docs.nango.dev/integrations/all/tiktok-accounts
tiktok-ads:
    categories:
        - social
    auth_mode: OAUTH2
    authorization_url: https://business-api.tiktok.com/portal/auth
    token_url: https://business-api.tiktok.com/open_api/v1.3/oauth2/access_token/
    proxy:
        base_url: https://business-api.tiktok.com/open_api/v1.3/
    token_params:
        grant_type: authorization_code
    authorization_url_replacements:
        client_id: app_id
    docs: https://docs.nango.dev/integrations/all/tiktok-ads
timely:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://api.timelyapp.com/1.1/oauth/authorize
    token_url: https://api.timelyapp.com/1.1/oauth/token
    disable_pkce: true
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    proxy:
        base_url: https://api.timelyapp.com
    docs: https://docs.nango.dev/integrations/all/timely
tremendous:
    categories:
        - payment
    auth_mode: OAUTH2
    authorization_url: https://api.tremendous.com/oauth/authorize
    token_url: https://api.tremendous.com/oauth/token
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.tremendous.com/api/v2
    docs: https://docs.nango.dev/integrations/all/tremendous
tremendous-sandbox:
    categories:
        - payment
    auth_mode: OAUTH2
    authorization_url: https://testflight.tremendous.com/oauth/authorize
    token_url: https://testflight.tremendous.com/oauth/token
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://testflight.tremendous.com/api/v2
    docs: https://docs.nango.dev/integrations/all/tremendous
trello:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH1
    request_url: https://trello.com/1/OAuthGetRequestToken
    authorization_url: https://trello.com/1/OAuthAuthorizeToken
    token_url: https://trello.com/1/OAuthGetAccessToken
    signature_method: 'HMAC-SHA1'
    scope_separator: ','
    authorization_params:
        expiration: never
    proxy:
        base_url: https://api.trello.com
    docs: https://docs.nango.dev/integrations/all/trello
todoist:
    categories:
        - productivity
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://todoist.com/oauth/authorize
    token_url: https://todoist.com/oauth/access_token
    scope_separator: ','
    proxy:
        base_url: https://api.todoist.com
    docs: https://docs.nango.dev/integrations/all/todoist
twitch:
    categories:
        - gaming
        - social
        - sports
        - video
    auth_mode: OAUTH2
    authorization_url: https://id.twitch.tv/oauth2/authorize
    token_url: https://id.twitch.tv/oauth2/token
    authorization_params:
        force_verify: false
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.twitch.tv
    docs: https://docs.nango.dev/integrations/all/twitch
twitter:
    categories:
        - marketing
        - social
    auth_mode: OAUTH1
    request_url: https://api.twitter.com/oauth/request_token
    authorization_url: https://api.twitter.com/oauth/authorize
    token_url: https://api.twitter.com/oauth/access_token
    signature_method: 'HMAC-SHA1'
    request_params:
        x_auth_access_type: write
    proxy:
        base_url: https://api.twitter.com
    docs: https://docs.nango.dev/integrations/all/twitter
twitter-v2:
    categories:
        - marketing
        - social
    auth_mode: OAUTH2
    authorization_url: https://twitter.com/i/oauth2/authorize
    token_url: https://api.twitter.com/2/oauth2/token
    token_request_auth_method: basic
    authorization_params:
        response_type: code
        response_mode: query
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    default_scopes:
        - offline.access
    proxy:
        base_url: https://api.twitter.com
    docs: https://docs.nango.dev/integrations/all/twitter
twitter-oauth2-cc:
    categories:
        - marketing
        - social
    auth_mode: OAUTH2_CC
    token_url: https://api.twitter.com/oauth2/token
    token_request_auth_method: basic
    scope_separator: ' '
    token_params:
        grant_type: client_credentials
    proxy:
        base_url: https://api.twitter.com
    docs: https://docs.nango.dev/integrations/all/twitter
twinfield:
    auth_mode: OAUTH2
    authorization_url: https://login.twinfield.com/auth/authentication/connect/authorize
    token_url: https://login.twinfield.com/auth/authentication/connect/token
    authorization_params:
        response_type: code
        nonce: AnotherRandomStringTwinfield
    refresh_params:
        grant_type: refresh_token
    scope_separator: ' '
    default_scopes:
        - openid
        - twf.user
        - twf.organisation
        - twf.organisationUser
        - offline_access
    disable_pkce: true
    docs: https://docs.nango.dev/integrations/all/twinfield
typeform:
    categories:
        - surveys
    auth_mode: OAUTH2
    authorization_url: https://api.typeform.com/oauth/authorize
    token_url: https://api.typeform.com/oauth/token
    disable_pkce: true
    default_scopes:
        - offline
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.typeform.com
    docs: https://docs.nango.dev/integrations/all/typeform
uber:
    auth_mode: OAUTH2
    authorization_url: https://login.uber.com/oauth/v2/authorize
    token_url: https://login.uber.com/oauth/v2/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.uber.com
    docs: https://docs.nango.dev/integrations/all/uber
unanet:
    categories:
        - crm
        - erp
        - accounting
    auth_mode: BASIC
    proxy:
        headers:
            x-compass-firm-id: ${connectionConfig.firmId}
            x-compass-api-key: ${connectionConfig.apiKey}
        base_url: https://compass.cosential.com
        verification:
            method: GET
            endpoint: /api/projects
    docs: https://docs.nango.dev/integrations/all/unanet
unauthenticated:
    auth_mode: NONE
    docs: https://docs.nango.dev/integrations/overview
vimeo:
    categories:
        - video
    auth_mode: OAUTH2
    authorization_url: https://api.vimeo.com/oauth/authorize
    token_url: https://api.vimeo.com/oauth/access_token
    token_request_auth_method: basic
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    proxy:
        base_url: https://api.vimeo.com
    docs: https://docs.nango.dev/integrations/all/vimeo
vimeo-basic:
    categories:
        - video
    auth_mode: BASIC
    proxy:
        base_url: https://api.vimeo.com
        verification:
            method: GET
            endpoint: /
    docs: https://docs.nango.dev/integrations/all/vimeo
wakatime:
    categories:
        - analytics
        - dev-tools
    auth_mode: OAUTH2
    authorization_url: https://wakatime.com/oauth/authorize
    token_url: https://wakatime.com/oauth/token
    proxy:
        base_url: https://wakatime.com
    docs: https://docs.nango.dev/integrations/all/wakatime
wave-accounting:
    categories:
        - accounting
    auth_mode: OAUTH2
    authorization_url: https://api.waveapps.com/oauth2/authorize
    token_url: https://api.waveapps.com/oauth2/token/
    proxy:
        base_url: https://gql.waveapps.com
    docs: https://docs.nango.dev/integrations/all/wave-accounting
wealthbox:
    categories:
        - crm
    auth_mode: OAUTH2
    authorization_url: https://app.crmworkspace.com/oauth/authorize
    token_url: https://app.crmworkspace.com/oauth/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.crmworkspace.com
    docs: https://docs.nango.dev/integrations/all/wealthbox
webflow:
    categories:
        - dev-tools
        - design
        - cms
    auth_mode: OAUTH2
    authorization_url: https://webflow.com/oauth/authorize
    token_url: https://api.webflow.com/oauth/access_token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    proxy:
        base_url: https://api.webflow.com
    docs: https://docs.nango.dev/integrations/all/webflow
whoop:
    categories:
        - sports
    auth_mode: OAUTH2
    authorization_url: https://api.prod.whoop.com/oauth/oauth2/auth
    token_url: https://api.prod.whoop.com/oauth/oauth2/token
    authorization_params:
        response_type: code
    proxy:
        base_url: https://api.prod.whoop.com/
        retry:
            after: 'x-ratelimit-reset'
        paginate:
            type: cursor
            offset_name_in_request: nextToken
            offset_name_in_response: next_token
            limit_name_in_request: limit
    docs: https://docs.nango.dev/integrations/all/whoop
wildix-pbx:
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.wildixin.com/authorization/oauth2
    token_url: https://${connectionConfig.subdomain}.wildixin.com/authorization/oauth2Token
    authorization_params:
        response_type: code
    redirect_uri_metadata:
        - subdomain
    docs: https://docs.nango.dev/integrations/all/wildix-pbx
    proxy:
        base_url: https://${connectionConfig.subdomain}.wildixin.com
wordpress:
    categories:
        - dev-tools
        - design
        - cms
    auth_mode: OAUTH2
    authorization_url: https://public-api.wordpress.com/oauth2/authorize
    token_url: https://public-api.wordpress.com/oauth2/token
    scope_separator: ' '
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    proxy:
        base_url: https://public-api.wordpress.com/rest/v1
    docs: https://docs.nango.dev/integrations/all/wordpress
woocommerce:
    categories:
        - e-commerce
        - dev-tools
        - design
    auth_mode: BASIC
    proxy:
        base_url: https://${connectionConfig.storeURL}
        verification:
            method: GET
            endpoint: /wp-json/wc/v3/customers
    docs: https://docs.nango.dev/integrations/all/woocommerce
workable:
    categories:
        - ats
    auth_mode: API_KEY
    proxy:
        headers:
            Authorization: Bearer ${apiKey}
        base_url: https://${connectionConfig.subdomain}.workable.com
    docs: https://docs.nango.dev/integrations/all/workable
wrike:
    categories:
        - productivity
    auth_mode: OAUTH2
    authorization_url: https://login.wrike.com/oauth2/authorize/v4
    token_url: https://login.wrike.com/oauth2/token
    scope_separator: ','
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    token_response_metadata:
        - host
    proxy:
        base_url: https://${connectionConfig.host}/api/v4
    docs: https://docs.nango.dev/integrations/all/wrike
xero:
    categories:
        - accounting
    auth_mode: OAUTH2
    authorization_url: https://login.xero.com/identity/connect/authorize
    token_url: https://identity.xero.com/connect/token
    authorization_params:
        response_type: code
    default_scopes:
        - offline_access
    proxy:
        base_url: https://api.xero.com
    post_connection_script: xeroPostConnection
    docs: https://docs.nango.dev/integrations/all/xero
yahoo:
    categories:
        - social
    auth_mode: OAUTH2
    authorization_url: https://api.login.yahoo.com/oauth2/request_auth
    token_url: https://api.login.yahoo.com/oauth2/get_token
    docs: https://docs.nango.dev/integrations/all/yahoo
yandex:
    categories:
        - social
    auth_mode: OAUTH2
    authorization_url: https://oauth.yandex.com/authorize
    token_url: https://oauth.yandex.com/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://translate.yandex.net
    docs: https://docs.nango.dev/integrations/all/yandex
youtube:
    alias: google
    categories:
        - video
    docs: https://docs.nango.dev/integrations/all/youtube
zapier-nla:
    auth_mode: OAUTH2
    authorization_url: https://nla.zapier.com/oauth/authorize/
    token_url: https://nla.zapier.com/oauth/token/
    proxy:
        base_url: https://nla.zapier.com
    docs: https://docs.nango.dev/integrations/all/zapier-nla
zendesk:
    categories:
        - support
        - ticketing
    auth_mode: OAUTH2
    authorization_url: https://${connectionConfig.subdomain}.zendesk.com/oauth/authorizations/new
    token_url: https://${connectionConfig.subdomain}.zendesk.com/oauth/tokens
    proxy:
        base_url: https://${connectionConfig.subdomain}.zendesk.com
        retry:
            after: 'Retry-After'
        paginate:
            type: link
            limit_name_in_request: per_page
            link_path_in_response_body: next_page
    docs: https://docs.nango.dev/integrations/all/zendesk
zenefits:
    categories:
        - hr
    auth_mode: OAUTH2
    authorization_url: https://secure.zenefits.com/oauth2/platform-authorize
    token_url: https://secure.zenefits.com/oauth2/token
    authorization_params:
        response_type: code
    token_params:
        grant_type: authorization_code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.zenefits.com
    docs: https://docs.nango.dev/integrations/all/zenefits
zoho:
    categories:
        - accounting
    auth_mode: OAUTH2
    authorization_url: https://accounts.zoho.${connectionConfig.extension}/oauth/v2/auth
    token_url: https://accounts.zoho.${connectionConfig.extension}/oauth/v2/token
    authorization_params:
        prompt: consent
        access_type: offline
    proxy:
        base_url: https://www.zohoapis.${connectionConfig.extension}
        paginate:
            type: offset
            response_path: data
            offset_name_in_request: page
            limit_name_in_request: per_page
zoho-books:
    alias: zoho
    docs: https://docs.nango.dev/integrations/all/zoho-books
zoho-crm:
    alias: zoho
    docs: https://docs.nango.dev/integrations/all/zoho-crm
zoho-desk:
    categories:
        - support
        - ticketing
    alias: zoho
    docs: https://docs.nango.dev/integrations/all/zoho-desk
zoho-inventory:
    categories:
        - e-commerce
    alias: zoho
    docs: https://docs.nango.dev/integrations/all/zoho-inventory
zoho-invoice:
    categories:
        - invoicing
    alias: zoho
    docs: https://docs.nango.dev/integrations/all/zoho-invoice
zoho-mail:
    categories:
        - productivity
        - communication
    alias: zoho
    proxy:
        base_url: https://mail.zoho.${connectionConfig.extension}
    docs: https://docs.nango.dev/integrations/all/zoho-mail
zoho-bigin:
    alias: zoho
    docs: https://docs.nango.dev/integrations/all/zoho-bigin
zoom:
    categories:
        - video
    auth_mode: OAUTH2
    authorization_url: https://zoom.us/oauth/authorize
    token_url: https://zoom.us/oauth/token
    authorization_params:
        response_type: code
    refresh_params:
        grant_type: refresh_token
    proxy:
        base_url: https://api.zoom.us/v2
    docs: https://docs.nango.dev/integrations/all/zoom
zoominfo:
    categories:
        - crm
        - marketing
    auth_mode: OAUTH2_CC
    proxy:
        retry:
            after: 'X-RateLimit-Reset'
        base_url: https://api.zoominfo.com
    token_url: https://api.zoominfo.com/authenticate
    token_request_auth_method: custom
    body_format: json
    docs: https://docs.nango.dev/integrations/all/zoominfo
